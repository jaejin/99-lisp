  (defun max-value-count (value first second)
	 (cond ((= 2 (length value))
		(let ((min (car value))
		      (max (cadr value)))
		  (if (>= min max)
		      (format nil "~s - ~srd" min first)
		      (format nil "~s - ~srd" max second)
		      )
		))
	       (t
		(let ((min (car value))
		      (max (cadr value)))
		  (if (>= min max)
		      (max-value-count (append (list min)  (cdr (cdr value))) first (+ second 1))
		      (max-value-count (append (list max) (cdr (cdr value))) second (+ second 1))
		      )
		  )
		)))
(defun max-value (value)
  (max-value-count value 1 2))
